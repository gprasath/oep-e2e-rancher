#!/bin/bash

pod() {

## Connecting the cluster to DOP
echo -e "\n************************ Connecting cluster to DOP ************************************\n"
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'cd oep-e2e-rancher && bash stages/cluster-connect/cluster-connect node'
}

node() {

bash utils/pooling jobname:create-apikey
bash utils/e2e-cr jobname:trrc01-cluster-connect jobphase:Running

# Use cluster2 kube config
export KUBECONFIG=~/.kube/cluster2_config

##Cluster name
cluster=cluster-2
echo -e "\nCLUSTER_NAME: $cluster\n"

echo -e "\n[ Updating cluster name in litmus job ]------------------------------------------------\n"
sed 's|value: oep-cluster|value: oep-cluster-cluster2|' -i oep-e2e/litmus/director/cluster-connect/run_litmus_test.yml

echo -e "\n[ Connecting the cluster to DOP ]------------------------------------------------------\n"
kubectl create -f oep-e2e/litmus/director/cluster-connect/run_litmus_test.yml

test_name=cluster-connect
echo -e "\nTest Name: $test_name\n"

litmus_pod=$(kubectl get po -n litmus | grep $test_name  | awk {'print $1'} | tail -n 1)
echo $litmus_pod

job_status=$(kubectl get po  $litmus_pod -n litmus | awk {'print $3'} | tail -n 1)
while [[ "$job_status" != "Completed" ]]
do
  job_status=$(kubectl get po  $litmus_pod -n litmus | awk {'print $3'} | tail -n 1)
  sleep 6
done

kubectl logs -f $litmus_pod -n litmus
testResult=$(kubectl get litmusresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)
echo -e "\nTest Result: $testResult\n"

if [ "$testResult" != Pass ]
then
  export KUBECONFIG=~/.kube/config
  bash utils/e2e-cr jobname:trrc01-cluster-connect jobphase:Completed
  exit 1;
else
  export KUBECONFIG=~/.kube/config
  bash utils/e2e-cr jobname:trrc01-cluster-connect jobphase:Completed
fi

}

if [ "$1" == "node" ];then
  node
else
  pod
fi