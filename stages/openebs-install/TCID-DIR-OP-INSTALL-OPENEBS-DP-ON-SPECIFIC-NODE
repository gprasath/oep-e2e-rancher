#!/bin/bash

pod() {

## Installing OpenEBS using DOP on cluster2
echo -e "\n************************ Installing OpenEBS *******************************************\n"
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'cd oep-e2e-rancher && bash stages/openebs-install/TCID-DIR-OP-INSTALL-OPENEBS-DP-ON-SPECIFIC-NODE node'
}

node() {

export KUBECONFIG=~/.kube/cluster2_config

bash utils/pooling jobname:tcid-dir-op-install-openebs-cp-on-specific-node
bash utils/e2e-cr jobname:tcid-dir-op-install-openebs-dp-on-specific-node jobphase:Running

export KUBECONFIG=~/.kube/cluster3_config

kubectl create -f oep-e2e/litmus/director/TCID-DIR-OP-INSTALL-OPENEBS-DP-ON-SPECIFIC-NODE/run_litmus_test.yml
kubectl get pods -n litmus

test_name=openebs-data-plane-test
echo -e "\nTest Name: $test_name\n"

litmus_pod=$(kubectl get po -n litmus | grep $test_name  | awk {'print $1'} | tail -n 1)
echo $litmus_pod

job_status=$(kubectl get po  $litmus_pod -n litmus | awk {'print $3'} | tail -n 1)

while [[ "$job_status" != "Completed" ]]
do 
  job_status=$(kubectl get po  $litmus_pod -n litmus | awk {'print $3'} | tail -n 1)
  sleep 6
done

kubectl logs -f $litmus_pod -n litmus
testResult=$(kubectl get litmusresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)
echo -e "\nTest Result: $testResult\n"

if [ "$testResult" != Pass ]
then
  export KUBECONFIG=~/.kube/cluster2_config
  bash utils/e2e-cr jobname:tcid-dir-op-install-openebs-dp-on-specific-node jobphase:Completed
  exit 1;
else
  export KUBECONFIG=~/.kube/cluster2_config 
  bash utils/e2e-cr jobname:tcid-dir-op-install-openebs-dp-on-specific-node jobphase:Completed
fi 

}

if [ "$1" == "node" ];then
  node
else
  pod
fi